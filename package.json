{
    "name": "vscode-remarklint",
    "displayName": "remarklint",
    "description": "Markdown linting and style checking with remarklint for Visual Studio Code",
    "icon": "images/remarklint-128.png",
    "version": "0.34.0",
    "author": "David Anson (https://dlaa.me/)",
    "publisher": "DavidAnson",
    "license": "MIT",
    "homepage": "https://github.com/twardoch/vscode-remarklint",
    "repository": {
        "type": "git",
        "url": "https://github.com/twardoch/vscode-remarklint.git"
    },
    "bugs": {
        "url": "https://github.com/twardoch/vscode-remarklint/issues"
    },
    "scripts": {
        "compile": "webpack --mode production",
        "lint": "eslint --ignore-pattern bundle.js *.js",
        "schema": "node generate-config-schema.js"
    },
    "categories": [
        "Linters"
    ],
    "engines": {
        "vscode": "^1.35.0"
    },
    "main": "./extension.js",
    "dependencies": {
        "js-yaml": "^3.13.1",
        "jsonc-parser": "^2.2.0",
        "remark": "^11.0.2",
        "unified-engine": "^7.0.0",
        "vfile": "^3.0.0",
        "minimatch": "^3.0.4",
        "markdown-extensions": "^1.1.1",
        "pretty-hrtime": "^1.0.3",
        "npm-module-path": "^2.0.2"
    },
    "devDependencies": {
        "@types/node": "~13.5.3",
        "@types/vscode": "~1.35.0",
        "eslint": "~6.8.0",
        "vsce": "~1.71.0",
        "webpack": "~4.41.5",
        "webpack-cli": "~3.3.10"
    },
    "keywords": [
        "markdown",
        "lint",
        "CommonMark",
        "md",
        "remark"
    ],
    "activationEvents": [
        "onLanguage:markdown",
        "onCommand:remarklint.fixAll"
    ],
    "contributes": {
        "commands": [{
            "command": "remarklint.fixAll",
            "title": "Remarklint: Fix all"
        }],
        "menus": {
            "commandPalette": [{
                "command": "remarklint.fixAll",
                "when": "editorLangId == markdown"
            }]
        },
        "configuration": {
            "properties": {
                "remarklint.customRulesAlwaysAllow": {
                    "description": "Array of workspace paths that load custom rules without prompting",
                    "scope": "application",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "remarklint.customRules": {
                    "description": "Array of paths for custom rules to include when linting",
                    "scope": "window",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "remarklint.ignore": {
                    "description": "Array of file names and glob expressions to ignore when linting",
                    "scope": "window",
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "default": []
                },
                "remarklint.run": {
                    "description": "Run the linter on save (onSave) or on type (onType)",
                    "scope": "resource",
                    "type": "string",
                    "enum": [
                        "onSave",
                        "onType"
                    ],
                    "default": "onType"
                },
                "remarklint.config": {
                    "title": "Remark format configuration options",
                    "type": "object",
                    "default": {},
                    "properties": {
                        "plugins": {
                            "default": {},
                            "description": "An object of globally or locally installed plugins with settings that will be used with Remark (without `remark-` prefix).",
                            "type": "object",
                            "items": {
                                "description": "The full name of plugin without `remark-` prefix.",
                                "type": "string"
                            }
                        },
                        "settings": {
                            "default": {},
                            "description": "Remark formatter rules.",
                            "type": "object",
                            "properties": {
                                "bullet": {
                                    "default": "-",
                                    "description": "List item bullet",
                                    "enum": [
                                        "-",
                                        "*"
                                    ],
                                    "type": "string"
                                },
                                "closeAtx": {
                                    "default": false,
                                    "description": "Compile ATX headings with the same amount of closing hashes as opening hashes.",
                                    "type": "boolean"
                                },
                                "commonmark": {
                                    "default": false,
                                    "description": "Compile adjacent blockquotes separately and escape more characters using slashes, instead of as entities.",
                                    "type": "boolean"
                                },
                                "emphasis": {
                                    "default": "_",
                                    "description": "Marker to use for emphasis.",
                                    "enum": [
                                        "_",
                                        "*"
                                    ],
                                    "type": "string"
                                },
                                "entities": {
                                    "default": false,
                                    "description": "See values description.",
                                    "oneOf": [{
                                            "description": "Entities are generated for special HTML characters (& > &amp;) and non-ASCII characters (© > &copy;). If named entities are not (widely) supported, numbered character references are used (’ > &#x2019;).",
                                            "enum": [
                                                true,
                                                false
                                            ],
                                            "type": "boolean"
                                        },
                                        {
                                            "description": "Numbered entities are generated (& > &#x26;) for special HTML characters and non-ASCII characters.",
                                            "enum": [
                                                "numbers"
                                            ],
                                            "type": "string"
                                        },
                                        {
                                            "description": "Special HTML characters are encoded (& > &amp;, ’ > &#x2019;), non-ASCII characters not (ö persists).",
                                            "enum": [
                                                "escape"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "type": [
                                        "boolean",
                                        "string"
                                    ]
                                },
                                "fence": {
                                    "default": "`",
                                    "description": "Fence marker to use for code blocks.",
                                    "enum": [
                                        "~",
                                        "`"
                                    ],
                                    "type": "string"
                                },
                                "fences": {
                                    "default": true,
                                    "description": "Stringify code blocks without language with fences.",
                                    "type": "boolean"
                                },
                                "footnotes": {
                                    "default": false,
                                    "description": "Footnotes",
                                    "type": "boolean"
                                },
                                "gfm": {
                                    "default": false,
                                    "description": "Escape pipes (|, for tables), colons (:, for literal URLs), tildes (~, for strike-through).",
                                    "type": "boolean"
                                },
                                "incrementListMarker": {
                                    "default": true,
                                    "description": "Whether to increment ordered list item bullets.",
                                    "type": "boolean"
                                },
                                "listItemIndent ": {
                                    "default": "1",
                                    "description": "How to indent the content from list items.",
                                    "oneOf": [{
                                            "description": "Use tab stops (4 spaces).",
                                            "enum": [
                                                "tab"
                                            ],
                                            "type": "string"
                                        },
                                        {
                                            "description": "Use one space.",
                                            "enum": [
                                                "1"
                                            ],
                                            "type": "string"
                                        },
                                        {
                                            "description": "use one space for tight and tab for loose list items.",
                                            "enum": [
                                                "mixed"
                                            ],
                                            "type": "string"
                                        }
                                    ],
                                    "type": "string"
                                },
                                "looseTable": {
                                    "default": false,
                                    "description": "Create tables without fences (initial and final pipes).",
                                    "type": "boolean"
                                },
                                "paddedTable": {
                                    "default": true,
                                    "description": "Padded table.",
                                    "type": "boolean"
                                },
                                "pedantic": {
                                    "default": false,
                                    "description": "Escape underscores in words.",
                                    "type": "boolean"
                                },
                                "rule": {
                                    "default": "-",
                                    "description": "Marker to use for thematic breaks (horizontal rules).",
                                    "enum": [
                                        "-",
                                        "*",
                                        "_"
                                    ],
                                    "type": "string"
                                },
                                "ruleRepetition ": {
                                    "default": 3,
                                    "description": "Number of markers to use for thematic breaks (horizontal rules). Should be 3 or more.",
                                    "minimum": 3,
                                    "type": "number"
                                },
                                "ruleSpaces": {
                                    "default": true,
                                    "description": "Whether to pad thematic break (horizontal rule) markers with spaces.",
                                    "type": "boolean"
                                },
                                "setext": {
                                    "default": false,
                                    "description": "Compile headings, when possible, in Setext-style: using = for level one headings and - for level two headings. Other heading levels are compiled as ATX (respecting closeAtx).",
                                    "type": "boolean"
                                },
                                "spacedTable": {
                                    "default": true,
                                    "description": "Create tables without spacing between pipes and content.",
                                    "type": "boolean"
                                },
                                "strong": {
                                    "default": "*",
                                    "description": "Marker to use for importance.",
                                    "enum": [
                                        "_",
                                        "*"
                                    ],
                                    "type": "string"
                                },
                                "yaml": {
                                    "default": true,
                                    "description": "Use YAML frontmatter.",
                                    "type": "boolean"
                                }
                            }
                        }
                    }
                }
            }
        }
    }
}